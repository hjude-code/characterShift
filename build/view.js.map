{"version":3,"file":"view.js","mappings":"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","sources":["webpack://character-shift/./src/view.js"],"sourcesContent":["let offsetText = document.querySelectorAll('h1.wp-block-hjude-character-shift')\r\n\r\nconst threshold = (incriment) =>{\r\n    let steps = []\r\n    let step = 0\r\n\r\n    while(step < 1){\r\n        steps.push(step)\r\n        step += incriment\r\n    }\r\n\r\n    return steps\r\n}\r\n\r\nfunction linear(t, tMin, tMax, value1, value2) {\r\n    if (t <= tMin) {\r\n      return value1;\r\n    } else if (t >= tMax) {\r\n      return value2;\r\n    } else {\r\n      return value1 + (value2 - value1) * (t - tMin) / (tMax - tMin);\r\n    }\r\n  }\r\n\r\n\r\nfunction shifter(entry, from, to, order=\"normal\"){\r\n    chars = entry.target.querySelectorAll('.charBox')\r\n\r\n    let intersectionRatio = entry.intersectionRatio\r\n\r\n    let step = (1/chars.length)\r\n    let min = 0;\r\n    let max = 1\r\n\r\n    if(order == 'normal'){\r\n        for(i = chars.length-1; i > -1; i--){\r\n\r\n            let rangeMin = min + ( (step/1.5) * (chars.length-i-1) )\r\n            let rangeMax = max - ( (step/1.5) * (i) )\r\n    \r\n            let val = linear(intersectionRatio, rangeMin, rangeMax, from, to)\r\n    \r\n            chars[i].style.setProperty('transform', `translateY(${val}%)`)\r\n            chars[i].style.setProperty('--min', rangeMin)\r\n            chars[i].style.setProperty('--max', rangeMax )\r\n    \r\n        }\r\n    }else if(order == 'reverse'){\r\n        for(i = chars.length-1; i > -1; i--){\r\n\r\n            let rangeMin = min + ( (step/1.5) * (i) )\r\n            let rangeMax = max - ( (step/1.5) * (chars.length-i-1) )\r\n    \r\n            let val = linear(intersectionRatio, rangeMin, rangeMax, from, to)\r\n    \r\n            chars[i].style.setProperty('transform', `translateY(${val}%)`)\r\n            chars[i].style.setProperty('--min', rangeMin)\r\n            chars[i].style.setProperty('--max', rangeMax )\r\n    \r\n        }\r\n        console.log('rev')\r\n    }\r\n}\r\n\r\nfunction calculateLines(element){\r\n    let height = element.getBoundingClientRect().height\r\n    let elementStyles = window.getComputedStyle(element)\r\n    let fontSize = parseFloat(elementStyles.getPropertyValue('font-size'))\r\n    let lineHeight = parseFloat(elementStyles.getPropertyValue('--height'))\r\n    let lineCount =  Math.round( height / (fontSize * lineHeight) )\r\n\r\n    let lines = {\r\n        count:lineCount,\r\n        height:lineHeight\r\n    }\r\n    return lines\r\n}\r\n\r\nfunction createRule(top){\r\n    let rule = document.createElement('hr')\r\n\r\n    rule.style.setProperty('height', \"2px\")\r\n    rule.style.setProperty('background-color', \"black\")\r\n    rule.style.setProperty('border', \"none\")\r\n    rule.style.setProperty('width', \"100%\")\r\n    rule.style.setProperty('position', \"absolute\")\r\n    rule.style.setProperty('top', top)\r\n    rule.style.setProperty('margin', \"0px\")\r\n\r\n    return rule\r\n}\r\n\r\nfunction addRules(element){\r\n\r\n    let lines = calculateLines(element)\r\n\r\n    for(i = 0; i < lines.count; i++){\r\n        let top = `${lines.height * (i+1)}em`\r\n\r\n        let rule = createRule(top)\r\n\r\n        element.appendChild(rule)\r\n    }\r\n    \r\n}\r\n\r\nfunction updateRules(element){\r\n\r\n    let existingRules = element.target.querySelectorAll('hr')\r\n    let lines = calculateLines(element.target)\r\n\r\n    let excessLines = existingRules.length - lines.count \r\n\r\n    if(excessLines > 0){ //remove lines\r\n        for(let i = 0; i < excessLines; i++){\r\n            let rule = existingRules[existingRules.length-1]\r\n            rule.remove()\r\n        }\r\n\r\n    }\r\n    if(excessLines < 0){ //add lines\r\n        excessLines = Math.abs(excessLines)\r\n\r\n        for(let i = 0; i < excessLines; i++){\r\n\r\n            let top = `${lines.height * (existingRules.length + 1)}em`\r\n\r\n            let rule = createRule(top)\r\n\r\n            element.target.appendChild(rule)\r\n        }\r\n    }\r\n}\r\n\r\nlet elementResizeObserver = new ResizeObserver((entries)=>{\r\n    entries.forEach((entry)=>{\r\n        updateRules(entry)\r\n    })\r\n})\r\n\r\n\r\nlet offsetTextObserver = new IntersectionObserver((entries)=>{\r\n\r\n    entries.forEach(entry=>{\r\n        if(entry.isIntersecting){\r\n            let textOffset = -1\r\n\r\n            let fromTop = entry.boundingClientRect.top\r\n            let fromBottom = window.innerHeight - entry.boundingClientRect.bottom\r\n\r\n            if(fromTop > fromBottom){ //bottom intersection\r\n                shifter(entry, -200, -100, 'reverse')\r\n            }else if(fromBottom >= fromTop){ //top intersection\r\n                shifter(entry, 0, -100)\r\n            }\r\n\r\n            \r\n        }\r\n\r\n    })\r\n    \r\n}, {\r\n    threshold: threshold(0.0001),\r\n    rootMargin: '-60px 0px -100px 0px'\r\n})\r\n\r\noffsetText.forEach(element=>{\r\n    offsetTextObserver.observe(element)\r\n    elementResizeObserver.observe(element)\r\n    addRules(element)\r\n})\r\n"],"names":["offsetText","document","querySelectorAll","threshold","incriment","steps","step","push","linear","t","tMin","tMax","value1","value2","shifter","entry","from","to","order","chars","target","intersectionRatio","length","min","max","i","rangeMin","rangeMax","val","style","setProperty","console","log","calculateLines","element","height","getBoundingClientRect","elementStyles","window","getComputedStyle","fontSize","parseFloat","getPropertyValue","lineHeight","lineCount","Math","round","lines","count","createRule","top","rule","createElement","addRules","appendChild","updateRules","existingRules","excessLines","remove","abs","elementResizeObserver","ResizeObserver","entries","forEach","offsetTextObserver","IntersectionObserver","isIntersecting","textOffset","fromTop","boundingClientRect","fromBottom","innerHeight","bottom","rootMargin","observe"],"sourceRoot":""}